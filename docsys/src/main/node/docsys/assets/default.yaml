description: |
  Use case for
scenarios:
  default:
    - run driver=cql tags==phase:schema threads==1 cycles==UNDEF
    - run driver=cql tags==phase:rampup cycles===TEMPLATE(rampup-cycles,10000000) threads=1000
    - run driver=cql tags==phase:main cycles===TEMPLATE(main-cycles,10000000) threads=1000
  main:
    - run driver=cql tags==phase:main cycles===TEMPLATE(main-cycles,10000000) threads=1000

bindings:
  version: Hash(); Identity() -> long


blocks:
  - tags:
      phase: schema
    params:
      prepared: false
    statements:
     - create-table : |
        CREATE TABLE IF NOT EXISTS <<keyspace:test>>.a (
          a text,
          PRIMARY KEY (a)
        );

  - tags:
      phase: rampup
    params:
      cl: <<write_cl:LOCAL_QUORUM>>
      instrument: true
    statements:
     - insert-rampup: |
        insert into  <<keyspace:test>>.a
        (
          a
        )
        VALUES
        (
          {a}
        )

       idempotent: true
  - tags:
      phase: main
      type: write
    params:
      ratio: <<write_ratio:1>>
      cl: <<write_cl:LOCAL_QUORUM>>
      instrument: true
    statements:
      - insert-main: |
          insert into  <<keyspace:test>>.a
          (
            a
          )
          VALUES
          (
            {a}
          )

  - tags:
      phase: main
      type: read
    params:
      ratio: <<read_partition_ratio:1>>
      cl: <<read_cl:LOCAL_QUORUM>>
      instrument: true
    statements:
     - read-partition: |
         select * from <<keyspace:test>>.a
         where
         a = {a}
         limit <<limit:1000>>;
  - tags:
      phase: main
      type: read
    params:
      ratio: <<read_row_ratio:1>>
      cl: <<read_cl:LOCAL_QUORUM>>
      instrument: true
    statements:
     - read-row: |
         select * from <<keyspace:test>>.a
         where
         a= {a};
