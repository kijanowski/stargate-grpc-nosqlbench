description: |
  Test workload for new pulsar driver.
  There is no default scenario. You must specify one of the named scenarios
  below like send100 or recv100.
  You can specify the number of tenants like `tenants=100`. This is the default.

bindings:
  mykey: NumberNameToString();
  sensor_id: ToUUID();ToString();
  #  sensor_type:
  reading_time: ToDateTime();
  reading_value: ToFloat(100);
  # tenant:

# document level parameters that apply to all Pulsar client types:
params:
  #topic_uri: "persistent://public/default/{topic}"
  topic_uri: "persistent://public/default/nbpulsar"
  async_api: "false"

blocks:
  - name: admin-block
    tags:
      phase: admin-api
    statements:
      - name: s1
        optype: admin
        admin_roles:
        allowed_clusters:
        tenant: "{tenant}"
        namespace: "default"

  - name: batch-producer-block
    tags:
      phase: batch-producer
    statements:
      - name: s1
        optype: batch-msg-send-start
        # For batch producer, "producer_name" should be associated with batch start
        # batch_producer_name: {batch_producer_name}
        ratio: 1
      - name: s2
        optype: batch-msg-send
        msg_key: "{mykey}"
        msg_value: |
          {
              "SensorID": "{sensor_id}",
              "SensorType": "Temperature",
              "ReadingTime": "{reading_time}",
              "ReadingValue": {reading_value}
          }
        ratio: 100
      - name: s3
        optype: batch-msg-send-end
        ratio: 1

  - name: producer-block
    tags:
      phase: producer
    statements:
      - name: s1
        optype: msg-send
        # producer_name: {producer_name}
        msg_key: "{mykey}"
        msg_value: |
          {
              "SensorID": "{sensor_id}",
              "SensorType": "Temperature",
              "ReadingTime": "{reading_time}",
              "ReadingValue": {reading_value}
          }

  - name: consumer-block
    tags:
      phase: consumer
    statements:
      - name: s1
        optype: msg-consume
        topic_names:
        topics_pattern:
        subscription_name: "mynbsub_test"
        subscription_type:
        consumer_name:

  - name: reader-block
    tags:
      phase: reader
    statements:
      - name: s1
        optype: msg-read
        reader_name:

#  - websocket-producer:
#    tags:
#      type: websocket-produer
#    statements:
#      - websocket-producer-stuff:
#
#  - managed-ledger:
#    tags:
#      type: managed-ledger
#    statement:
#      - managed-ledger-stuff:
