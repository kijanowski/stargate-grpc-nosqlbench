description: |
  Test workload for new pulsar driver.
  There is no default scenario. You must specify one of the named scenarios
  below like send100 or recv100.
  You can specify the number of tenants like `tenants=100`. This is the default.

bindings:
  mykey: NumberNameToString();
  sensor_id: ToUUID();ToString();
#  sensor_type:
  reading_time: ToDateTime();
  reading_value: ToFloat(100);
  topic: Template("topic-{}",Mod(TEMPLATE(tenants,10)L));

blocks:
#  - create-tenant-namespace:
#    tags:
#      type: create-tenant-namespace
#    statements:
#      tenant: {tenant}
#      namespace: {namespace}

  - name: producer-block
    tags:
      op-type: producer
    statements:
      - producer-stuff:
          #######
          # NOTE: tenant and namespace must be static and pre-exist in Pulsar first
          # topic_uri: "[persistent|non-persistent]://<tenant>/<namespace>/<topic>"
#          topic_uri: "persistent://public/default/{topic}"
          topic_uri: "persistent://public/default/nbpulsar"
          # producer-name:
          msg-key: "{mykey}"
          msg-value: |
            {
                "SensorID": "{sensor_id}",
                "SensorType": "Temperature",
                "ReadingTime": "{reading_time}",
                "ReadingValue": {reading_value}
            }

  - name: consumer-block
    tags:
      op-type: consumer
    statements:
      - consumer-stuff:
          topic-names: "persistent://public/default/nbpulsar, persistent://public/default/mynbtest"
          topics-pattern: "public/default/.*"
          subscription-name:
          subscription-type:
          consumer-name:

  - reader:
    tags:
      op-type: reader
    statements:
      - reader-stuff:

#  - websocket-producer:
#    tags:
#      type: websocket-produer
#    statements:
#      - websocket-producer-stuff:
#
#  - managed-ledger:
#    tags:
#      type: managed-ledger
#    statement:
#      - managed-ledger-stuff:


